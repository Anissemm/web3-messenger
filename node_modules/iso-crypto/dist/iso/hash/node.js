import { createHash } from 'node:crypto';
import { decode } from '#encode';
import { Algorithms, defaultHash } from '../lib/types.js';
const hashAlgorithm = ({ algorithm, size })=>{
    if (algorithm === Algorithms.SHA1) {
        return 'SHA1';
    }
    return `sha${size}`;
};
export const hash = async (input, algorithm = defaultHash)=>{
    const decoded = decode(input);
    if (algorithm === Algorithms.RAW) {
        return decoded;
    }
    return createHash(hashAlgorithm(algorithm)).update(decoded).digest();
};

//# sourceMappingURL=node.js.map