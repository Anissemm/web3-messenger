import { decode } from '#encode';
import { Algorithms, defaultHash } from '../lib/types.js';
const { crypto } = globalThis;
const hashAlgorithm = ({ algorithm, size })=>{
    if (algorithm === Algorithms.SHA1) {
        return 'SHA-1';
    }
    return `SHA-${size}`;
};
export const hash = async (input, algorithm = defaultHash)=>{
    const decoded = decode(input);
    if (algorithm === Algorithms.RAW) {
        return decoded;
    }
    const buffer = await crypto.subtle.digest(hashAlgorithm(algorithm), decoded);
    return new Uint8Array(buffer);
};

//# sourceMappingURL=browser.js.map